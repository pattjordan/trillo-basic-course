//////////////////////////////////////////////////////
// LOGO
.logo {
    height: 3.25rem;
    margin-left: 2rem;
}





//////////////////////////////////////////////////////
// SEARCH
.search {
    flex: 0 0 40%; // Takes up 40% of header section

    display: flex; // Flex item is also flex container now
    align-items: center; // Center at cross axis
    justify-content: center; // Center at main axis

    &__input {
        font-family: inherit;
        font-size: inherit;
        color: inherit;

        width: 90%; // 90 & of 40% header section
        background-color: var(--color-grey-light-2);
        border: none;
        padding: .7rem 2rem;
        border-radius: 100px; // Rounded edges in search bar -> just high number
        margin-right: -3.25rem; // Button moves on top of the input

        transition: all .2s;

        &:focus {
            outline: none;
            width: 100%; // Effect: increase horizontal width
            background-color: var(--color-grey-light-3); // Make darker
        }

        &::-webkit-input-placeholder {
            font-weight: 100;
            color: var(--color-grey-light-4);

        }
    }

    &__input:focus + &__button {
        background-color: var(--color-grey-light-3); // Button has same bg color as input
    }

    &__button {
        border: none;
        background-color: var(--color-grey-light-2);

        &:focus {
            outline: none;
        }

        &:active {
            transform: translateY(2px); // Move down when clicked
        }
    }

    &__icon {
        // Format svg icon -> set height & width
        height: 2rem;
        width: 2rem;
        fill: var(--color-grey-dark-3); // Change svg color
    }
}




//////////////////////////////////////////////////////
// USER-NAV
.user-nav {
    align-self: stretch; // Stretch height to take up full height of parent element (here: header)

    display: flex;
    align-items: center;

    & > * {
        // Select all direct children (here: icon-box and user)
        padding: 0 2rem;
        cursor: pointer;
        height: 100%; // Hover effect over whole height

        display: flex;
        align-items: center;
    }

    & > *:hover {
        background-color: var(--color-grey-light-2);
    }

    &__icon-box {
        position: relative;
    }

    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-grey-dark-2);
    }

    &__notification {
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%;
        background-color: var(--color-primary);
        color: #fff;

        // Positioning of element
        position: absolute; // -> Set parent element position to relative; used icon-box, because usage on svg problematic (icon)
        top: 1.5rem;
        right: 1.1rem;

        // Flexbox to center text
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__user-photo {
        height: 3.75rem;
        border-radius: 50%;
        margin-right: 1rem;
    }
}

//////////////////////////////////////////////////////
// SIDE NAVIFATION
.side-nav {
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    &__item {
        position: relative; // Needed for item::before

        &:not(:last-child) {
            margin-bottom: .5rem;
        }
    }


    // Hover effect
    &__item::before {
        // Small line of side-nav
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%; // Same with as list item
        width: 3px;
        background-color: var(--color-primary);

        // Normale state shows no line
        // transform-origin: bottom; // Default set to center
        transform: scaleY(0);
        transition: transform .2s,
                    width .4s cubic-bezier(1,0,0,1) .2s, // Delay needed to see animation in x-direction (.2s)
                    background-color .1s; 
    }


    &__item:hover::before,
    &__item--active::before {
        // Styling applied to first item (--active) in default

        // Line gets scaled to full width when hover
        transform: scaleY(1);
        width: 100%; // Expands from 3px to 100%
    }

    &__item:active::before {
        // Show that user clicked on item
        background-color: var(--color-primary-light);
    }


    &__link:link,
    &__link:visited {
        color: var(--color-grey-light-1);
        text-decoration: none; // Remove underline
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;
        position: relative; // Needed to make z-index work
        z-index: 10;

        display: flex;
        align-items: center;
    }

    &__icon {
        // Size as squares
        width: 1.75rem;
        height: 1.75rem;

        margin-right: 2rem;
        fill: currentColor; // Uses volor of current element or parent element
    }
}


//////////////////////////////////////////////////////
// LEGAL TEXT
.legal {
    font-size: 1.2rem;
    color: var(--color-grey-light-4);
    text-align: center;
    padding: 2.5rem;
}


//////////////////////////////////////////////////////
// GALLERY

.gallery {
    display: flex; // Sets picture automatically side-by-side

    &__photo {
        width: 100%;
        display: block; // Ensures that no whitespace is below pictures what would happen if format as inline-block (default)
    }
}

//////////////////////////////////////////////////////
// HOTEL OVERVIEW
.overview {
    border-bottom: var(--line);

    display: flex;
    align-items: center; // vertically aligned

    &__heading {
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem; // Space around the text -> "breathing space"
    }

    &__stars {
        // flex: 1; // Would grow and occupy all of the "empty" space -> no ideal solution because element should only take up the space it needs and not the whole white space -> use "margin auto"
        margin-right: auto; // Sets starts to the left, takes up only space need for element, left space is used "as margin"

        display: flex; // icon-stars has small white space below them -> Fix: Set parent elemtn (here: stars) to flex
    }

    &__icon-star,
    &__icon-location {
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);
    }

    &__location {
        font-size: 1.2rem;
        display: flex;
        vertical-align: center;
    }

    &__icon-location {
        margin-right: 1.5rem; // Margin between icon and text
    }

    &__rating {
        background-color: var(--color-primary);
        color: #fff;
        margin-left: 3rem;
        padding: 0 2.25rem; 

        align-self: stretch; // Overwrite setting from parent element -> element gets strethed and occipyies all available space

        display: flex;
        flex-direction: column; // Else components would be set side-by-side with the following two settings
        align-items: center;
        justify-content: center;
    }

    &__rating-average {
        font-size: 2.25rem;
        font-weight: 300;
        margin-bottom: -3px; // Decrease space to bottom
    }

    &__rating-count {
        font-size: .8rem;
        text-transform: uppercase;
    }
}


//////////////////////////////////////////////////////
//  BUTTON INLINE
.btn-inline {
    border: none; // Remove defalt button
    color: var(--color-primary);
    font-size: inherit;
    border-bottom: 1px solid currentColor; // Border has same color as text
    padding-bottom: 2px; // Space between text and border
    display: inline-block;
    background-color: transparent; // Makes button more modular -> just takes color of element in the background
    cursor: pointer;

    transition: all .2s;


    &:hover {
        color: var(--color-grey-dark-1); // Border automatically gets same color, because usage of currentColor
    }

    &:focus {
        outline: none; // Remove default blue border
        animation: pulsate 1s infinite; // Call keyframes animation; infinirte animation once clicked
    }
}

// Animation of button
@keyframes pulsate{
    0% {
        // Initial state
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 1rem 4rem rgba(0,0,0,0.25);
    }

    100% {
        // Final state (same as initial)
        transform: scale(1);
        box-shadow: none;
    }
}